group 'com.children.video'
version '1.0'

apply plugin: 'java'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'war'
apply plugin: 'groovy'
//apply plugin: 'application'
apply plugin: 'org.flywaydb.flyway'

repositories {
    maven{
        url "http://mvnrepository.com/artifact"
    }
    maven{url "http://maven.oschina.net/content/groups/public"}
    maven{url "https://jcenter.bintray.com/"}
    mavenCentral()
    mavenLocal()
}

ext {
    springVersion = '3.2.13.RELEASE'
    jerseyVersion = "2.22.1"
    aspectjVersion = '1.7.4'

    environment = project.hasProperty("env") ? env : 'src/main/resources'
    environmentPah = environment
    // read database envs
    Properties props = new Properties()
    props.load(new FileInputStream(file(environmentPah + "/database.properties")))
    db_host = props.getProperty("db_host")
    db_port = props.getProperty("db_port")
    db_user = props.getProperty("db_user")
    db_password = props.getProperty("db_password")
    db_schema = props.getProperty("db_schema")
    flyway.url = "jdbc:mysql://" + db_host + ":" + db_port + "/" + db_schema + "?characterEncoding=utf8"
    flyway.user = db_user
    flyway.password = db_password
    flyway.encoding = 'UTF-8'
    flyway.setBaselineOnMigrate(true);
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile 'org.eclipse.jetty:jetty-server:9.2.3.v20140905'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile ('org.glassfish.jersey.media:jersey-media-json-jackson:2.22.1')
//            {
//        exclude group:'org.slf4j', module: 'slf4j-nop'
//    }
    compile ('org.glassfish.jersey.containers:jersey-container-servlet:2.22.1')
//            {
//        exclude group:'org.slf4j', module: 'slf4j-nop'
//    }
    compile ('org.slf4j:slf4j-nop:1.7.12')
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile(group: 'org.springframework', name: 'spring-test', version: springVersion) {
        exclude module: 'junit'
    }

    //hibernate
    compile 'c3p0:c3p0:0.9.1.2'
    compile 'org.hibernate:hibernate-core:4.2.2.Final'
    compile 'org.hibernate:hibernate-entitymanager:4.2.2.Final'
    compile 'mysql:mysql-connector-java:5.1.25'
    compile 'com.google.code.gson:gson:2.4'
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:2.22.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.22.1'
    compile 'org.glassfish.jersey.ext:jersey-spring3:2.22.1'

    //spring
    compile('org.springframework:spring-core:' + springVersion)
    compile('org.springframework:spring-web:' + springVersion)
    compile('org.springframework:spring-orm:' + springVersion)
    compile('org.springframework:spring-context-support:' + springVersion)
    compile('org.springframework:spring-web:' + springVersion)
    compile('org.springframework:spring-beans:' + springVersion)
    compile('org.springframework:spring-aop:' + springVersion)
    compile('org.springframework:spring-context:' + springVersion)
    compile('org.springframework.data:spring-data-jpa:1.9.0.RELEASE')
    compile('org.aspectj:aspectjrt:' + aspectjVersion)
    compile('org.aspectj:aspectjweaver:' + aspectjVersion)


    compile('com.github.springtestdbunit:spring-test-dbunit:1.2.0')
    compile('org.dbunit:dbunit:2.5.0')

    compile('org.apache.httpcomponents:httpclient:4.5.1')

    def tomcatVersion = '7.0.65'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}
tomcatRunWar{
    webDefaultXml = file('src/main/resources/web.xml')
}
tomcatRun{
    webDefaultXml = file('src/main/resources/web.xml')
}
war{
    webXml = file('src/main/resources/web.xml')
    archiveName = "education.war"
}
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into 'build/dependencies'
}